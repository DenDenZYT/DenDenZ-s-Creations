local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\169\76","\169\135\98\154"),function(v42) if (v9(v42,2)==79) then local v101=0;while true do if (v101==0) then v30=v8(v11(v42,1,2 -1 ));return "";end end else local v102=0;local v103;while true do if (v102==0) then v103=v10(v8(v42,16));if v30 then local v128=0;local v129;while true do if (v128==0) then v129=v13(v103,v30);v30=nil;v128=1;end if (1==v128) then return v129;end end else return v103;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v104=0;local v105;while true do if (v104==0) then v105=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-(2 -1))) + 1)) ;return v105-(v105%1) ;end end else local v106=2^(v44-1) ;return (((v43%(v106 + v106))>=v106) and 1) or 0 ;end end local function v32() local v46=0;local v47;while true do if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end if (v46==1) then return v47;end end end local function v33() local v48,v49=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;return (v49 * 256) + v48 ;end local function v34() local v50=0;local v51;local v52;local v53;local v54;while true do if (v50==0) then v51,v52,v53,v54=v9(v27,v29,v29 + 3 );v29=v29 + (7 -3) ;v50=1;end if (1==v50) then return (v54 * 16777216) + (v53 * 65536) + (v52 * (659 -403)) + v51 ;end end end local function v35() local v55=0;local v56;local v57;local v58;local v59;local v60;local v61;while true do if (v55==3) then if (v60==0) then if (v59==0) then return v61 * 0 ;else local v130=0;while true do if (v130==0) then v60=1;v58=0;break;end end end elseif (v60==2047) then return ((v59==(927 -(214 + 713))) and (v61 * (1/0))) or (v61 * NaN) ;end return v16(v61,v60-1023 ) * (v58 + (v59/(2^52))) ;end if (v55==0) then v56=v34();v57=v34();v55=1;end if (v55==1) then v58=620 -(555 + 64) ;v59=(v31(v57,1,20) * ((933 -(857 + 74))^32)) + v56 ;v55=2;end if (2==v55) then v60=v31(v57,21,31);v61=((v31(v57,32)==(569 -(367 + 201))) and  -1) or 1 ;v55=3;end end end local function v36(v62) local v63=0;local v64;local v65;while true do if (v63==1) then v64=v11(v27,v29,(v29 + v62) -(1 + 0) );v29=v29 + v62 ;v63=2;end if (v63==0) then v64=nil;if  not v62 then local v120=0;while true do if (v120==0) then v62=v34();if (v62==0) then return "";end break;end end end v63=1;end if (v63==3) then return v14(v65);end if (2==v63) then v65={};for v114=1, #v64 do v65[v114]=v10(v9(v11(v64,v114,v114)));end v63=3;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v66={};local v67={};local v68={};local v69={v66,v67,nil,v68};local v70=v34();local v71={};for v79=1,v70 do local v80=v32();local v81;if (v80==(1 + 0)) then v81=v32()~=0 ;elseif (v80==2) then v81=v35();elseif (v80==3) then v81=v36();end v71[v79]=v81;end v69[880 -(282 + 595) ]=v32();for v83=1,v34() do local v84=v32();if (v31(v84,1,1)==0) then local v110=v31(v84,2,3);local v111=v31(v84,4,6);local v112={v33(),v33(),nil,nil};if (v110==0) then local v121=0;while true do if (v121==0) then v112[1640 -(1523 + 114) ]=v33();v112[4]=v33();break;end end elseif (v110==1) then v112[3]=v34();elseif (v110==2) then v112[3]=v34() -(2^16) ;elseif (v110==3) then v112[3]=v34() -(2^16) ;v112[4]=v33();end if (v31(v111,1,1)==1) then v112[2]=v71[v112[2]];end if (v31(v111,2,2)==(1 + 0)) then v112[3 -0 ]=v71[v112[3]];end if (v31(v111,3,3)==1) then v112[4]=v71[v112[4]];end v66[v83]=v112;end end for v85=1,v34() do v67[v85-(1066 -(68 + 997)) ]=v39();end return v69;end local function v40(v73,v74,v75) local v76=v73[1];local v77=v73[2];local v78=v73[1273 -(226 + 1044) ];return function(...) local v87=v76;local v88=v77;local v89=v78;local v90=v38;local v91=1;local v92= -1;local v93={};local v94={...};local v95=v20("#",...) -(4 -3) ;local v96={};local v97={};for v107=0,v95 do if (v107>=v89) then v93[v107-v89 ]=v94[v107 + 1 ];else v97[v107]=v94[v107 + 1 ];end end local v98=(v95-v89) + (118 -(32 + 85)) ;local v99;local v100;while true do v99=v87[v91];v100=v99[1];if (v100<=60) then if (v100<=(29 + 0)) then if (v100<=14) then if (v100<=6) then if (v100<=(1 + 1)) then if (v100<=0) then v97[v99[2]][v97[v99[3]]]=v99[4];elseif (v100==1) then if (v97[v99[2]]<=v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v99[2]==v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=4) then if (v100>3) then local v144=0;local v145;local v146;while true do if (v144==0) then v145=v99[2];v146=v97[v145];v144=1;end if (v144==1) then for v443=v145 + 1 ,v92 do v15(v146,v97[v443]);end break;end end else v97[v99[2]]=v97[v99[3]] + v99[4] ;end elseif (v100>5) then if (v97[v99[2]]<=v99[961 -(892 + 65) ]) then v91=v91 + 1 ;else v91=v99[3];end else v97[v99[2]]=v99[3] + v97[v99[4]] ;end elseif (v100<=10) then if (v100<=8) then if (v100>7) then v97[v99[2]]=v75[v99[3]];else local v151=v99[2];v97[v151]=v97[v151](v21(v97,v151 + 1 ,v92));end elseif (v100>9) then v97[v99[2]]=v99[3]~=0 ;else v97[v99[2]]= #v97[v99[3]];end elseif (v100<=12) then if (v100>11) then do return v97[v99[2]]();end else v97[v99[2]]={};end elseif (v100==13) then if (v99[2]==v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end else v97[v99[2]]=v74[v99[3]];end elseif (v100<=21) then if (v100<=17) then if (v100<=15) then if (v97[v99[2]]<=v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[7 -4 ];end elseif (v100==16) then v74[v99[3]]=v97[v99[2]];else local v161=v99[2];local v162=v97[v161];local v163=v97[v161 + 2 ];if (v163>0) then if (v162>v97[v161 + 1 ]) then v91=v99[3];else v97[v161 + 3 ]=v162;end elseif (v162<v97[v161 + (1 -0) ]) then v91=v99[3];else v97[v161 + 3 ]=v162;end end elseif (v100<=19) then if (v100>18) then local v164=v99[2];local v165=v97[v99[3]];v97[v164 + 1 ]=v165;v97[v164]=v165[v99[4]];else local v169=v99[2];local v170,v171=v90(v97[v169](v21(v97,v169 + 1 ,v99[3])));v92=(v171 + v169) -1 ;local v172=0;for v340=v169,v92 do v172=v172 + 1 ;v97[v340]=v170[v172];end end elseif (v100>(36 -16)) then if (v97[v99[352 -(87 + 263) ]]<v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[183 -(67 + 113) ];end else v97[v99[2]]=v97[v99[3]]%v97[v99[4]] ;end elseif (v100<=25) then if (v100<=(17 + 6)) then if (v100==22) then do return v97[v99[2]];end else local v174=v99[2];local v175,v176=v90(v97[v174](v97[v174 + 1 ]));v92=(v176 + v174) -1 ;local v177=0;for v343=v174,v92 do v177=v177 + 1 ;v97[v343]=v175[v177];end end elseif (v100>24) then v75[v99[3]]=v97[v99[2]];else local v180=v99[2];v97[v180]=v97[v180]();end elseif (v100<=27) then if (v100==26) then do return;end elseif (v97[v99[2]]==v99[4]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100==28) then v97[v99[2]][v99[3]]=v99[4];else for v346=v99[2],v99[3] do v97[v346]=nil;end end elseif (v100<=44) then if (v100<=36) then if (v100<=32) then if (v100<=30) then local v139=v99[2];v97[v139](v21(v97,v139 + 1 ,v92));elseif (v100>31) then v97[v99[2]]=v97[v99[3]]/v97[v99[4]] ;else local v185=v99[4 -2 ];local v186={};for v348=1, #v96 do local v349=0;local v350;while true do if (0==v349) then v350=v96[v348];for v496=0, #v350 do local v497=v350[v496];local v498=v497[1 + 0 ];local v499=v497[2];if ((v498==v97) and (v499>=v185)) then local v504=0;while true do if (v504==0) then v186[v499]=v498[v499];v497[1]=v186;break;end end end end break;end end end end elseif (v100<=34) then if (v100==33) then local v187=0;local v188;local v189;local v190;while true do if (v187==0) then v188=v99[2];v189=v97[v188];v187=1;end if (v187==1) then v190=v99[3];for v449=1,v190 do v189[v449]=v97[v188 + v449 ];end break;end end else local v191=0;local v192;while true do if (v191==0) then v192=v99[7 -5 ];v97[v192]=v97[v192](v21(v97,v192 + 1 ,v99[3]));break;end end end elseif (v100>(987 -(802 + 150))) then local v193=0;local v194;local v195;while true do if (1==v193) then v97[v194 + 1 ]=v195;v97[v194]=v195[v99[4]];break;end if (v193==0) then v194=v99[2];v195=v97[v99[3]];v193=1;end end else local v196=v99[2];local v197={v97[v196](v21(v97,v196 + 1 ,v92))};local v198=0;for v351=v196,v99[4] do local v352=0;while true do if (0==v352) then v198=v198 + 1 ;v97[v351]=v197[v198];break;end end end end elseif (v100<=40) then if (v100<=38) then if (v100>37) then local v199=0;local v200;local v201;local v202;while true do if (v199==0) then v200=v99[2];v201={v97[v200](v97[v200 + 1 ])};v199=1;end if (v199==1) then v202=0;for v454=v200,v99[10 -6 ] do v202=v202 + 1 ;v97[v454]=v201[v202];end break;end end else v97[v99[2]]=v97[v99[3]]%v97[v99[4]] ;end elseif (v100>39) then local v204=0;local v205;while true do if (0==v204) then v205=v99[2];do return v21(v97,v205,v92);end break;end end else for v353=v99[2],v99[3] do v97[v353]=nil;end end elseif (v100<=42) then if (v100>41) then if (v97[v99[2]]~=v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end else v97[v99[2]]=v97[v99[3]];end elseif (v100>(77 -34)) then local v208=0;local v209;local v210;local v211;while true do if (v208==0) then v209=v99[2 + 0 ];v210=v97[v209];v208=1;end if (1==v208) then v211=v97[v209 + 2 ];if (v211>0) then if (v210>v97[v209 + (998 -(915 + 82)) ]) then v91=v99[3];else v97[v209 + (8 -5) ]=v210;end elseif (v210<v97[v209 + 1 + 0 ]) then v91=v99[3];else v97[v209 + 3 ]=v210;end break;end end else v97[v99[2]]=v97[v99[3]]%v99[4] ;end elseif (v100<=52) then if (v100<=48) then if (v100<=46) then if (v100>45) then v97[v99[2]]=v97[v99[3]] + v99[4] ;else v97[v99[2]]=v97[v99[3]] -v97[v99[4]] ;end elseif (v100>47) then do return v97[v99[2]]();end elseif (v99[2]<v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=50) then if (v100==49) then local v215=0;local v216;while true do if (v215==0) then v216=v99[2];v97[v216]=v97[v216](v21(v97,v216 + (1 -0) ,v92));break;end end elseif (v99[2]>v97[v99[1191 -(1069 + 118) ]]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100==51) then if v97[v99[2]] then v91=v91 + (2 -1) ;else v91=v99[3];end else v75[v99[3]]=v97[v99[2]];end elseif (v100<=56) then if (v100<=54) then if (v100==(115 -62)) then v97[v99[1 + 1 ]]=v99[3]~=0 ;else v97[v99[3 -1 ]]=v99[3] + v97[v99[4]] ;end elseif (v100==55) then local v221=v99[2];local v222=v97[v221];local v223=v99[3];for v355=1,v223 do v222[v355]=v97[v221 + v355 ];end else v97[v99[2]]=v97[v99[3]]%v99[4] ;end elseif (v100<=58) then if (v100>57) then local v225=0;local v226;local v227;local v228;while true do if (v225==1) then v228=0;for v457=v226,v99[4] do local v458=0;while true do if (v458==0) then v228=v228 + 1 + 0 ;v97[v457]=v227[v228];break;end end end break;end if (v225==0) then v226=v99[2];v227={v97[v226](v21(v97,v226 + 1 ,v92))};v225=1;end end else v74[v99[3]]=v97[v99[2]];end elseif (v100>59) then local v231=v99[2];local v232=v97[v231 + 2 ];local v233=v97[v231] + v232 ;v97[v231]=v233;if (v232>0) then if (v233<=v97[v231 + 1 ]) then v91=v99[3];v97[v231 + 3 ]=v233;end elseif (v233>=v97[v231 + 1 ]) then v91=v99[3];v97[v231 + 3 ]=v233;end elseif  not v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=91) then if (v100<=75) then if (v100<=67) then if (v100<=63) then if (v100<=61) then local v140=v99[2];v97[v140]=v97[v140](v21(v97,v140 + 1 ,v99[3]));elseif (v100==62) then local v235=0;local v236;local v237;local v238;local v239;while true do if (1==v235) then v92=(v238 + v236) -1 ;v239=0;v235=2;end if (v235==2) then for v463=v236,v92 do v239=v239 + 1 ;v97[v463]=v237[v239];end break;end if (v235==0) then v236=v99[2];v237,v238=v90(v97[v236](v21(v97,v236 + 1 ,v99[3])));v235=1;end end else local v240=v99[2];local v241,v242=v90(v97[v240](v21(v97,v240 + 1 ,v92)));v92=(v242 + v240) -1 ;local v243=0;for v358=v240,v92 do v243=v243 + 1 ;v97[v358]=v241[v243];end end elseif (v100<=65) then if (v100==64) then local v244=0;local v245;local v246;local v247;while true do if (v244==0) then v245=v88[v99[794 -(368 + 423) ]];v246=nil;v244=1;end if (1==v244) then v247={};v246=v18({},{[v7("\244\72\45\90\249\54\208","\168\171\23\68\52\157\83")]=function(v466,v467) local v468=0;local v469;while true do if (v468==0) then v469=v247[v467];return v469[3 -2 ][v469[2]];end end end,[v7("\203\78\251\168\50\36\137\240\116\237","\231\148\17\149\205\69\77")]=function(v470,v471,v472) local v473=0;local v474;while true do if (v473==0) then v474=v247[v471];v474[1][v474[2]]=v472;break;end end end});v244=2;end if (v244==2) then for v475=19 -(10 + 8) ,v99[4] do local v476=0;local v477;while true do if (v476==1) then if (v477[1]==41) then v247[v475-1 ]={v97,v477[3]};else v247[v475-1 ]={v74,v477[3]};end v96[ #v96 + 1 ]=v247;break;end if (v476==0) then v91=v91 + 1 ;v477=v87[v91];v476=1;end end end v97[v99[2]]=v40(v245,v246,v75);break;end end else v97[v99[2]]=v97[v99[3]][v99[446 -(416 + 26) ]];end elseif (v100==(210 -144)) then v97[v99[2]]=v99[2 + 1 ];else do return;end end elseif (v100<=71) then if (v100<=69) then if (v100==68) then do return v97[v99[2]];end else v97[v99[2]]=v74[v99[4 -1 ]];end elseif (v100>70) then local v254=0;local v255;while true do if (v254==0) then v255=v99[2];v97[v255](v21(v97,v255 + 1 ,v99[3]));break;end end else local v256=v99[2];local v257,v258=v90(v97[v256](v97[v256 + 1 ]));v92=(v258 + v256) -1 ;local v259=0;for v361=v256,v92 do local v362=0;while true do if (v362==0) then v259=v259 + 1 ;v97[v361]=v257[v259];break;end end end end elseif (v100<=73) then if (v100==72) then local v260=0;while true do if (0==v260) then v97[v99[2]]=v99[3]~=0 ;v91=v91 + 1 ;break;end end else v97[v99[2]]=v99[3];end elseif (v100==74) then if (v97[v99[2]]<=v99[4]) then v91=v91 + 1 ;else v91=v99[3];end else local v263=v99[2];local v264=v97[v263 + 2 ];local v265=v97[v263] + v264 ;v97[v263]=v265;if (v264>0) then if (v265<=v97[v263 + 1 ]) then v91=v99[3];v97[v263 + 3 ]=v265;end elseif (v265>=v97[v263 + 1 ]) then v91=v99[3];v97[v263 + 3 ]=v265;end end elseif (v100<=(521 -(145 + 293))) then if (v100<=79) then if (v100<=77) then if (v100>76) then local v267=v99[2];local v268=v99[4];local v269=v267 + 2 ;local v270={v97[v267](v97[v267 + 1 ],v97[v269])};for v363=1,v268 do v97[v269 + v363 ]=v270[v363];end local v271=v270[1];if v271 then v97[v269]=v271;v91=v99[433 -(44 + 386) ];else v91=v91 + 1 ;end elseif (v97[v99[2]]<v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100==78) then v97[v99[2]][v97[v99[3]]]=v97[v99[4]];else local v274=v88[v99[1489 -(998 + 488) ]];local v275;local v276={};v275=v18({},{[v7("\191\152\206\245\83\250\152","\159\224\199\167\155\55")]=function(v366,v367) local v368=v276[v367];return v368[1][v368[2]];end,[v7("\200\204\50\215\224\250\50\214\242\235","\178\151\147\92")]=function(v369,v370,v371) local v372=0;local v373;while true do if (v372==0) then v373=v276[v370];v373[1][v373[2]]=v371;break;end end end});for v374=1 + 0 ,v99[4] do local v375=0;local v376;while true do if (0==v375) then v91=v91 + 1 ;v376=v87[v91];v375=1;end if (v375==1) then if (v376[1]==41) then v276[v374-1 ]={v97,v376[3]};else v276[v374-1 ]={v74,v376[3]};end v96[ #v96 + 1 ]=v276;break;end end end v97[v99[2]]=v40(v274,v275,v75);end elseif (v100<=81) then if (v100==80) then local v278=v99[2];local v279={v97[v278](v97[v278 + (773 -(201 + 571)) ])};local v280=0;for v377=v278,v99[4] do local v378=0;while true do if (v378==0) then v280=v280 + 1 ;v97[v377]=v279[v280];break;end end end else v97[v99[1140 -(116 + 1022) ]][v99[3]]=v97[v99[4]];end elseif (v100==82) then local v283=v99[2];v97[v283](v21(v97,v283 + (4 -3) ,v92));else local v284=0;local v285;local v286;while true do if (v284==1) then for v490=v285 + 1 ,v92 do v15(v286,v97[v490]);end break;end if (v284==0) then v285=v99[2];v286=v97[v285];v284=1;end end end elseif (v100<=87) then if (v100<=85) then if (v100>84) then v97[v99[2]]=v97[v99[3]]/v97[v99[4]] ;else v97[v99[2]]= #v97[v99[3]];end elseif (v100==86) then local v289=0;local v290;local v291;while true do if (v289==1) then for v491=1 + 0 , #v96 do local v492=0;local v493;while true do if (0==v492) then v493=v96[v491];for v519=0, #v493 do local v520=0;local v521;local v522;local v523;while true do if (v520==0) then v521=v493[v519];v522=v521[1];v520=1;end if (v520==1) then v523=v521[2];if ((v522==v97) and (v523>=v290)) then local v532=0;while true do if (v532==0) then v291[v523]=v522[v523];v521[1]=v291;break;end end end break;end end end break;end end end break;end if (0==v289) then v290=v99[2];v291={};v289=1;end end elseif (v99[2]<=v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=(324 -235)) then if (v100==88) then v97[v99[2]][v99[3]]=v97[v99[4]];else v97[v99[2]]=v97[v99[3]] -v99[14 -10 ] ;end elseif (v100==90) then local v295=v99[2];do return v21(v97,v295,v92);end else local v296=0;local v297;local v298;local v299;local v300;while true do if (v296==0) then v297=v99[2];v298,v299=v90(v97[v297](v21(v97,v297 + 1 ,v92)));v296=1;end if (1==v296) then v92=(v299 + v297) -1 ;v300=859 -(814 + 45) ;v296=2;end if (v296==2) then for v494=v297,v92 do local v495=0;while true do if (0==v495) then v300=v300 + 1 ;v97[v494]=v298[v300];break;end end end break;end end end elseif (v100<=106) then if (v100<=98) then if (v100<=(231 -137)) then if (v100<=92) then local v142=0;local v143;while true do if (v142==0) then v143=v99[2];v97[v143](v97[v143 + 1 ]);break;end end elseif (v100>93) then if v97[v99[1 + 1 ]] then v91=v91 + 1 ;else v91=v99[3];end else local v301=v99[2];local v302=v97[v301];for v380=v301 + 1 ,v99[3] do v15(v302,v97[v380]);end end elseif (v100<=96) then if (v100>95) then v97[v99[2]][v97[v99[3]]]=v97[v99[4]];elseif (v99[2]<=v97[v99[4]]) then v91=v91 + 1 + 0 ;else v91=v99[3];end elseif (v100==97) then v97[v99[2]]();else v91=v99[3];end elseif (v100<=102) then if (v100<=100) then if (v100==(984 -(261 + 624))) then local v306=0;local v307;while true do if (v306==0) then v307=v99[2];v97[v307](v21(v97,v307 + 1 ,v99[3]));break;end end else v97[v99[2]][v99[3]]=v99[4];end elseif (v100==101) then v91=v99[3];else v97[v99[3 -1 ]][v97[v99[3]]]=v99[4];end elseif (v100<=104) then if (v100==103) then if  not v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end else local v313=v99[2];local v314=v99[4];local v315=v313 + 2 ;local v316={v97[v313](v97[v313 + (1081 -(1020 + 60)) ],v97[v315])};for v381=1,v314 do v97[v315 + v381 ]=v316[v381];end local v317=v316[1424 -(630 + 793) ];if v317 then local v403=0;while true do if (v403==0) then v97[v315]=v317;v91=v99[3];break;end end else v91=v91 + 1 ;end end elseif (v100>105) then local v318=0;local v319;while true do if (0==v318) then v319=v99[2];do return v21(v97,v319,v319 + v99[3] );end break;end end else local v320=0;local v321;while true do if (v320==0) then v321=v99[2];v97[v321]=v97[v321]();break;end end end elseif (v100<=114) then if (v100<=(372 -262)) then if (v100<=108) then if (v100>107) then if (v99[2]<v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end else v97[v99[2]]();end elseif (v100==109) then local v322=v99[2];v97[v322](v97[v322 + 1 ]);elseif (v99[9 -7 ]>v97[v99[2 + 2 ]]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=(385 -273)) then if (v100==111) then v97[v99[2]]=v97[v99[3]] -v97[v99[4]] ;else v97[v99[2]]=v99[3]~=0 ;v91=v91 + 1 ;end elseif (v100>113) then local v325=0;local v326;while true do if (v325==0) then v326=v99[2];v97[v326]=v97[v326](v97[v326 + 1 ]);break;end end else v97[v99[1749 -(760 + 987) ]]=v97[v99[3]];end elseif (v100<=118) then if (v100<=116) then if (v100>115) then local v329=0;local v330;while true do if (v329==0) then v330=v99[2];do return v97[v330](v21(v97,v330 + 1 ,v99[3]));end break;end end else v97[v99[1915 -(1789 + 124) ]]=v75[v99[3]];end elseif (v100>117) then v97[v99[2]]=v97[v99[3]][v99[4]];else v97[v99[2]]={};end elseif (v100<=120) then if (v100==119) then if (v97[v99[2]]==v99[770 -(745 + 21) ]) then v91=v91 + 1 ;else v91=v99[3];end else local v336=v99[2];v97[v336]=v97[v336](v97[v336 + 1 ]);end elseif (v100>121) then v97[v99[2]]=v97[v99[3]] -v99[4] ;else local v339=v99[2];do return v97[v339](v21(v97,v339 + 1 ,v99[3]));end end v91=v91 + 1 ;end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--
